import './globals.css';

import { Geist } from 'next/font/google';
import localFont from 'next/font/local';
import { TRPCReactProvider } from '@/trpc';
import {
	BrowserExtensionHandler,
	DominantHandProvider,
	HydrationErrorBoundary,
	HydrationFix,
	HydrationManager,
	ThemeProvider,
} from '@/components/providers';
import type { Metadata } from 'next';
import type { ReactNode } from 'react';

export const metadata: Metadata = {
	title: 'RandoDrum',
	description: 'Generated by create-t3-app',
	icons: [{ rel: 'icon', url: '/favicon.ico' }],
};

const geist = Geist({
	subsets: ['latin'],
	variable: '--font-geist-sans',
});

const musisync = localFont({
	src: '../../public/Musisync.ttf',
	variable: '--font-musisync',
	display: 'swap',
});

export default function RootLayout({ children }: Readonly<{ children: ReactNode }>) {
	return (
		<html lang='en' className={`${geist.variable} ${musisync.variable}`}>
			<body>
				<BrowserExtensionHandler />
				<HydrationFix />
				<HydrationManager>
					<HydrationErrorBoundary>
						<ThemeProvider>
							<DominantHandProvider>
								<TRPCReactProvider>{children}</TRPCReactProvider>
							</DominantHandProvider>
						</ThemeProvider>
					</HydrationErrorBoundary>
				</HydrationManager>
			</body>
		</html>
	);
}
